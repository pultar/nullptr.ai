<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dynamic programming on nullptr.ai</title>
    <link>https://nullptr.ai/tags/dynamic-programming/</link>
    <description>Recent content in dynamic programming on nullptr.ai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Jan 2023 11:00:00 +0000</lastBuildDate>
    <atom:link href="https://nullptr.ai/tags/dynamic-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>542. 01 Matrix</title>
      <link>https://nullptr.ai/blog/542-01-matrix/</link>
      <pubDate>Wed, 25 Jan 2023 11:00:00 +0000</pubDate>
      <guid>https://nullptr.ai/blog/542-01-matrix/</guid>
      <description>Problem Statement The problem is taken from LeetCode.&#xA;First Solution - Breadth-First Search Computing closest distances in a matrix should always trigger BFS. We initialize a std::vector for the computed distances results. There is two ways we can go about performing BFS: either we start from all 1&#39;s and try to find the closest 0, or we start from all 0&#39;s and try to find all 1&#39;s.</description>
    </item>
    <item>
      <title>53. Maximum Subarray</title>
      <link>https://nullptr.ai/blog/53-maximum-subarray/</link>
      <pubDate>Tue, 24 Jan 2023 13:00:00 +0000</pubDate>
      <guid>https://nullptr.ai/blog/53-maximum-subarray/</guid>
      <description>The Problem Statement This problem is taken from LeetCode.&#xA;The Solution - Kadane&#39;s Algorithm It is very easy to end up with a solution that is $O(N^2)$ or $O(N^3)$ in time complexity by comparing all possible subarrays. The challenge is to find a solution that is only $O(N)$.</description>
    </item>
  </channel>
</rss>
